<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDMapper3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.studyMybatis.mapper.SysUserMapper">

    <resultMap id="sysUserMap" type="com.studyMybatis.entity.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userinfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time "
                jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectAll" resultType="SysUser">
        select *
        from sys_user
    </select>

    <!--    <select id="selectAll" resultType="com.studyMybatis.entity.SysUser">-->
    <!--            select id,-->
    <!--                   user_name     userName,-->
    <!--                   user_password userPassword,-->
    <!--                   user_email    userEmail,-->
    <!--                   user_info     userinfo,-->
    <!--                   head_img      headimg,-->
    <!--                   create_time   createTime-->
    <!--            from sys user-->
    <!--    </select>-->

    <select id="selectById" resultMap="sysUserMap">
        select id,
               user_name     userName,
               user_password userPassword,
               user_email    userEmail,
               user_info     userInfo,
               head_img      headImg,
               create_time   createTime
        from sys_user
        where id = #{id}
    </select>
    <select id="selectSysRolesByUserid" resultType="com.studyMybatis.entity.SysRole">
        select r.id,
               r.role_name roleName,
               r.enabled,
               r.create by createBy,
    r.create_time createTime
        from sys_user u
            inner join sys_user_role ur
        on u.id = ur.user id
            inner join sys_role r on ur.role id = r.id
        where u.id = #{userid}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name, user_password, user_email,
                             user_info, head_img, create_time)
        values (#{userName}, #{userPassword}, #{userEmail},
                #{userInfo}, #{headImg, jdbcType=BLOB},
                #{createTime, jdbcType=TIMESTAMP})
    </insert>

    <insert id="updateById">
        update sys_user
        set user_name= #{userName},
            user_password= #{userPassword},
            user_email = #{userEmail},
            user_info= #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            create_time = #{createTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </insert>


    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>


    <!--    <select id="selectByUser" resultType="com.studyMybatis.entity.SysUser">-->
    <!--        select id,-->
    <!--        user_name userName,-->
    <!--        user_password userPassword,-->
    <!--        user_email userEmail,-->
    <!--        user_info userInfo,-->
    <!--        head_img headImg,-->
    <!--        create_time createTime-->
    <!--        from sys_user-->
    <!--        where 1 = 1-->
    <!--        <if test="userName != null and userName != ''">-->
    <!--            and user_name like concat('%',#{userName},'%')-->
    <!--        </if>-->
    <!--        <if test="userEmail != null and userEmail !=''">-->
    <!--            and user_email = #{userEmail}-->
    <!--        </if>-->
    <!--    </select>    -->

    <select id="selectByUser" resultType="com.studyMybatis.entity.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        <where>
            <if test="userName != null and userName != ''">
                and user_name like concat('%',#{userName},'%')
            </if>
            <if test="userEmail != null and userEmail !=''">
                and user_email = #{userEmail}
            </if>
        </where>
    </select>


    <!--    <update id="updateByIdSelective">-->
    <!--        update sys_user-->
    <!--        set-->
    <!--        <if test="userName != null and userName !=''">-->
    <!--            user_name= #{userName},-->
    <!--        </if>-->
    <!--        <if test="userPassword != null and userPassword !=''">-->
    <!--            user_password= #{userPassword},-->
    <!--        </if>-->
    <!--        <if test="userEmail != null and userEmail != ''">-->
    <!--            user_email = #{userEmail},-->
    <!--        </if>-->
    <!--        <if test=" userInfo != null and userInfo != ''">-->
    <!--            user_info= #{userInfo},-->
    <!--        </if>-->
    <!--        <if test="headImg != null ">-->
    <!--            head_img = #{headImg, jdbcType=BLOB},-->
    <!--        </if>-->
    <!--        <if test="createTime!= null ">-->
    <!--            create_time = #{createTime, jdbcType=TIMESTAMP},-->
    <!--        </if>-->
    <!--        id = #{id}-->
    <!--        where id = #{id}-->
    <!--    </update>-->

    <update id="updateByIdSelective">
        update sys_user
        <set>
            <if test="userName != null and userName !=''">
                user_name= #{userName},
            </if>
            <if test="userPassword != null and userPassword !=''">
                user_password= #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test=" userInfo != null and userInfo != ''">
                user_info= #{userInfo},
            </if>
            <if test="headImg != null ">
                head_img = #{headImg, jdbcType=BLOB},
            </if>
            <if test="createTime!= null ">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            id = #{id}
        </set>
        where id = #{id}
    </update>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(
        user_name, user_password,
        <if test=" userEmail != null and userEmail != ''">
            user_email,
        </if>
        user_info, head_img, create_time)
        values(
        #{userName}, #{userPassword},
        <if test="userEmail != null and userEmail != ''">
            #{userEmail},
        </if>
        #{userInfo}, #{headImg,jdbcType=BLOB},
        #{createTime, jdbcType= TIMESTAMP})
    </insert>


    <select id="selectByIdOrUserName" resultType="com.studyMybatis.entity.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
        where 1 = 1
        <choose>
            <when test="id != null">
                and id= #{id}
            </when>
            <when test=" userName != null and userName !=''">
                and user_name = #{userName}
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>


    <select id="selectByIdList" resultType="com.studyMybatis.entity.SysUser">
        select id,
        user_name userName ,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo ,
        head_img headImg,
        create_time createTime
        from sys_user
        where id in
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>


    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">>
        insert into sys_user(
        user_name, user_password, user_email,
        user_info , head_img , create_time)
        values
        <foreach collection="list" item="user" separator=",">
            (
            #{user.userName}, #{user.userPassword},#{user.userEmail} ,
            #{user.userInfo} , #{user.headImg, jdbcType=BLOB} ,
            #{user.createTime , jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="updateByMap">
        update sys_user
        set
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        where id = #{id}
    </update>
</mapper>